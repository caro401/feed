<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2021-06-02T01:45:36.801Z</id>
    <title>osmos::feed</title>
    <updated>2021-06-02T01:45:36.801Z</updated>
    <generator>osmosfeed 1.10.2</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[Client Resources]]></title>
        <id>https://intransitstudios.com/client-resources</id>
        <link href="https://intransitstudios.com/client-resources"/>
        <updated>2021-06-01T18:40:26.000Z</updated>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Moving Forward]]></title>
        <id>https://intransitstudios.com/moving-forward</id>
        <link href="https://intransitstudios.com/moving-forward"/>
        <updated>2021-06-01T18:39:15.000Z</updated>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Getting Started]]></title>
        <id>https://intransitstudios.com/getting-started</id>
        <link href="https://intransitstudios.com/getting-started"/>
        <updated>2021-06-01T18:38:33.000Z</updated>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.10.2]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.10.2</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.10.2"/>
        <updated>2021-06-01T04:39:30.000Z</updated>
        <summary type="html"><![CDATA[Added: testing and CI/CD workflows]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Maggie Appleton - The Cultural Anthropology of React]]></title>
        <id>https://youtu.be/8snrXgzM1bM</id>
        <link href="https://youtu.be/8snrXgzM1bM"/>
        <updated>2021-05-30T20:43:14.000Z</updated>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Minimal CSS Solutions to (Previously) Complex Problems /w Stephanie Eckles [CSSCafe / english]]]></title>
        <id>https://m.youtube.com/watch?v=dz6aFfme_hg&amp;s=09</id>
        <link href="https://m.youtube.com/watch?v=dz6aFfme_hg&amp;s=09"/>
        <updated>2021-05-29T11:38:53.000Z</updated>
        <summary type="html"><![CDATA[If you love CSS, have a look at the CSS Café - Online Meetup: https://www.meetup.com/de-DE/CSS-Cafehttps://twitter.com/CSS__Cafe// For more CSS tricks and ti...]]></summary>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Beautiful link previews. Automagically. | Mugshot Bot]]></title>
        <id>https://mugshotbot.com/pricing</id>
        <link href="https://mugshotbot.com/pricing"/>
        <updated>2021-05-28T16:57:56.000Z</updated>
        <summary type="html"><![CDATA[Automate link preview images for every page on your blog. No fussing with design tools or wading through thousands of stock photos.]]></summary>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Watch Now - FREE MASTERCLASS]]></title>
        <id>https://ellenyin.com/replay</id>
        <link href="https://ellenyin.com/replay"/>
        <updated>2021-05-27T14:41:10.000Z</updated>
        <summary type="html"><![CDATA[How to attract consistent clients without a large audience]]></summary>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Next-paradigm programming languages: what will they look like and what chan]]></title>
        <id>https://dl.acm.org/doi/10.1145/3359591.3359739</id>
        <link href="https://dl.acm.org/doi/10.1145/3359591.3359739"/>
        <updated>2021-05-27T14:33:22.000Z</updated>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Local-first software: you own your data, in spite of the cloud | Proceeding]]></title>
        <id>https://dl.acm.org/doi/10.1145/3359591.3359737</id>
        <link href="https://dl.acm.org/doi/10.1145/3359591.3359737"/>
        <updated>2021-05-27T14:33:08.000Z</updated>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.9.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.9.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.9.0"/>
        <updated>2021-05-26T06:02:55.000Z</updated>
        <summary type="html"><![CDATA[Added: experimental support for iTunes podcast feed: Demo | Source. With this new release, you can render an audio control to play the mp3 file and display iTunes episode duration. It is "experimental" due to these caveats:

This feature is currently only available through custom template.
iTunes has no strict format requirement for duration. The unit is most likely seconds but can be "hh:mm:ss" or "mm:ss" for some sources. A future version may expose a human readable string to the template.
No image support yet. Some shows might have disabled CORS or use a relative URL for image, which forces osmosfeed to download the image during build. A future version may support it.
You can't republish the podcast in the feed output. Supporting this goes beyond the scope of the project at the moment.
Fixed: the articles in template data were not sorted.
Thank you @Zenigata]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS Tips]]></title>
        <id>https://markodenic.com/css-tips</id>
        <link href="https://markodenic.com/css-tips"/>
        <updated>2021-05-25T21:33:19.000Z</updated>
        <summary type="html"><![CDATA[CSS tips and tricks you will not see in most of tutorials.]]></summary>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Blog about what you've struggled with]]></title>
        <id>https://jvns.ca/blog/2021/05/24/blog-about-what-you-ve-struggled-with/</id>
        <link href="https://jvns.ca/blog/2021/05/24/blog-about-what-you-ve-struggled-with/"/>
        <updated>2021-05-24T13:59:07.000Z</updated>
        <summary type="html"><![CDATA[I was talking to Jemma recently about what stops people
from blogging. One barrier that stood out to me was: it’s hard to identify
which things you know will be useful to other people!
The process I use for a lot of my blog posts is:
Struggle with something (usually computer-related)
Eventually (days or months or years later), figure out how to solve some of
the problems I had
Write a blog post about what helped me
I think this approach is effective because if I struggled with something,
there’s a pretty good chance that other people are struggling with it too, and
what I learned is likely to be useful to at least some of them!
Obviously this isn’t the only approach to blogging, but it’s my approach, so
that’s what I’m going to write about here :). I’ll give a few examples of
specific blog…]]></summary>
        <author>
            <name>Julia Evans</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.8.1]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.1</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.1"/>
        <updated>2021-05-23T05:40:12.000Z</updated>
        <summary type="html"><![CDATA[Fixed: UnhandledPromiseRejectionWarning: Error: At least one option must be a string]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.8.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.0"/>
        <updated>2021-05-23T05:12:08.000Z</updated>
        <summary type="html"><![CDATA[Changed: Smart summary truncation. When there is no dedicated summary (only Atom feed has it, and many sites don't use it) from the source, we check if the content/description (Both Atom and RSS) field is long enough to be full text. If so, it will be truncated into a "pseudo" summary. If not, we assume the source used the content field as summary, and it will be displayed in full length.
Thank you: @LooperXX.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Learn CSS]]></title>
        <id>https://web.dev/learn/css</id>
        <link href="https://web.dev/learn/css"/>
        <updated>2021-05-21T15:36:58.000Z</updated>
        <summary type="html"><![CDATA[An evergreen CSS course and reference to level up your web styling expertise.]]></summary>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Demo: Standalone Bibliography]]></title>
        <id>https://citeproc-js.readthedocs.io/en/latest/deployments.html</id>
        <link href="https://citeproc-js.readthedocs.io/en/latest/deployments.html"/>
        <updated>2021-05-20T16:26:03.000Z</updated>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[sw-yx/spark-joy]]></title>
        <id>https://github.com/sw-yx/spark-joy</id>
        <link href="https://github.com/sw-yx/spark-joy"/>
        <updated>2021-05-20T14:23:47.000Z</updated>
        <summary type="html"><![CDATA[✨😂easy ways to add design flair, user delight, and whimsy to your product. - sw-yx/spark-joy]]></summary>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Wiki workflow]]></title>
        <id>https://wiki.nikitavoloboev.xyz/other/wiki-workflow#similar-wikis-i-liked</id>
        <link href="https://wiki.nikitavoloboev.xyz/other/wiki-workflow#similar-wikis-i-liked"/>
        <updated>2021-05-20T14:22:07.000Z</updated>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kris Howard - Knitted Disruption]]></title>
        <id>https://youtube.com/watch?v=0lqyYJl9vuM</id>
        <link href="https://youtube.com/watch?v=0lqyYJl9vuM"/>
        <updated>2021-05-20T12:01:25.000Z</updated>
        <summary type="html"><![CDATA[For those versed in both technology and craft, knitting patterns are just another form of programming language. An experienced knitter can reverse engineer m...]]></summary>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to look at the stack with gdb]]></title>
        <id>https://jvns.ca/blog/2021/05/17/how-to-look-at-the-stack-in-gdb/</id>
        <link href="https://jvns.ca/blog/2021/05/17/how-to-look-at-the-stack-in-gdb/"/>
        <updated>2021-05-17T09:14:37.000Z</updated>
        <summary type="html"><![CDATA[I was chatting with someone yesterday and they mentioned that they don’t really
understand exactly how the stack works or how to look at it.
So here’s a quick walkthrough of how you can use gdb to look at the stack of a C
program. I think this would be similar for a Rust program, but I’m going to use
C because I find it a little simpler for a toy example and also you can do Terrible
Things in C more easily.
our test program
Here’s a simple C program that declares a few variables and reads two strings
from standard input. One of the strings is on the heap, and one is on the
stack.
#include <stdio.h>
#include <stdlib.h>

int main() {
    char stack_string[10] = "stack";
    int x = 10;
    char *heap_string;

    heap_string = malloc(50);

    printf("Enter a string for the stack: ");
    ge…]]></summary>
        <author>
            <name>Julia Evans</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.7.2]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.2</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.2"/>
        <updated>2021-05-17T05:32:19.000Z</updated>
        <summary type="html"><![CDATA[⚠ Deprecated: To accommodate the monorepo setup, the node version in all templates/demos/examples has changed from 14 to 16. This is not a breaking change as our compile target is still node 14, and node 16 is backward compatible. We still recommend you start using node-version: "16" in your .github/workflows/update-feed.yaml today to get the performance/security improvements from the newer node. See example
Chore: Reorganize to monorepo with npm workspace.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.7.1]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.1</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.1"/>
        <updated>2021-05-16T02:33:58.000Z</updated>
        <summary type="html"><![CDATA[Fixed: static files were unnecessarily copied for custom templates.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.7.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.0"/>
        <updated>2021-05-16T01:42:24.000Z</updated>
        <summary type="html"><![CDATA[Added: templating system. Demo | Source | Docs
Chore: rendering logic refactoring. Adopting functional paradigm.
Thank you @tianheg, @onnyyonn]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Fleece Washing]]></title>
        <id>https://journalwsd.org.uk/article/fleece-washing</id>
        <link href="https://journalwsd.org.uk/article/fleece-washing"/>
        <updated>2021-05-12T13:59:04.000Z</updated>
        <summary type="html"><![CDATA[Creating a finished item from a fleece is a rewarding experience. The start of this journey is washing the fleece but, with many approaches advocated, which is the best? This article is the result of two days of testing and describes a comparison of seven methods from various sources, referenced at the end of the article. A method of fleece washing based on these test results is proposed.]]></summary>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Two options for using custom properties]]></title>
        <id>https://quirksmode.org/blog/archives/2021/05/two_options_for.html?utm_source=CSS-Weekly&amp;utm_campaign=Issue-459&amp;utm_medium=email</id>
        <link href="https://quirksmode.org/blog/archives/2021/05/two_options_for.html?utm_source=CSS-Weekly&amp;utm_campaign=Issue-459&amp;utm_medium=email"/>
        <updated>2021-05-12T08:39:44.000Z</updated>
        <summary type="html"><![CDATA[Recently I interviewed Stefan Judis for my upcoming book. We discussed CSS custom properties, and something interesting happened. We had a period of a few minutes where we were talking past one another, because, as it turns out, we have...]]></summary>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The OSI model doesn't map well to TCP/IP]]></title>
        <id>https://jvns.ca/blog/2021/05/11/what-s-the-osi-model-/</id>
        <link href="https://jvns.ca/blog/2021/05/11/what-s-the-osi-model-/"/>
        <updated>2021-05-11T14:58:41.000Z</updated>
        <summary type="html"><![CDATA[TCP/IP is the set of networking protocols that we use on the modern internet –
TCP, UDP, IP, ARP, ICMP, DNS, etc. When I talk about “networking”, I’m
basically always talking about TCP/IP.
Many explanations of TCP/IP start with something called the “OSI model”. I
don’t use the OSI model when explaining networking because when I first
started learning about internet networking I found all of the OSI model
explanations really confusing – it wasn’t clear to me at all how the OSI
model corresponded to TCP/IP.
So if you’re just starting to learn about networking and you’re confused about
the OSI model, here’s an explanation of how it corresponds to TCP/IP, how
it doesn’t, and why it’s safe to mostly just ignore it if you don’t find it helpful.
the OSI model has 7 layers
Let’s very briefly discu…]]></summary>
        <author>
            <name>Julia Evans</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Top Common Mistakes UI/UX Designers Make]]></title>
        <id>https://blog.prototypr.io/top-common-mistakes-ui-ux-designers-make-6e13bd891e84</id>
        <link href="https://blog.prototypr.io/top-common-mistakes-ui-ux-designers-make-6e13bd891e84"/>
        <updated>2021-05-11T13:56:58.000Z</updated>
        <summary type="html"><![CDATA[Using my own design concepts as examples.]]></summary>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Notes on building debugging puzzles]]></title>
        <id>https://jvns.ca/blog/2021/04/16/notes-on-debugging-puzzles</id>
        <link href="https://jvns.ca/blog/2021/04/16/notes-on-debugging-puzzles"/>
        <updated>2021-05-11T13:41:33.000Z</updated>
        <summary type="html"><![CDATA[Notes on building debugging puzzles]]></summary>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.4.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.4.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.4.0"/>
        <updated>2021-05-10T08:55:42.000Z</updated>
        <summary type="html"><![CDATA[Added: Basic theme customization: Demo | Source | Docs.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.6.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.6.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.6.0"/>
        <updated>2021-05-10T08:15:20.000Z</updated>
        <summary type="html"><![CDATA[Added: Link from the title of a subscription to its website.
Added: Store feedUrl and siteUrl for each source in cache.
Added: Semantic element (<time>) for timestamp on the UI.
Added: Semantic API for theming the default template. Demo | Source | Docs
Changed: Moved feed metadata from article level to feed level in cache.
Fixed: Any html-like text was stripped from title. Fixed with encoded text.
Removed: href for each source in cache. The value was never used so it's not a breaking change.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.5.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.5.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.5.0"/>
        <updated>2021-05-08T05:16:47.000Z</updated>
        <summary type="html"><![CDATA[Added: Atom feed generator
Added: Customizable site title
Added: Copy all files from static directory to the root of the site.
Changed: Favicon, css, and js assets now existing at site root level.
Chore: Excluded testing files from repo.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
</feed>