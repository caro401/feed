<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2021-06-15T00:29:27.157Z</id>
    <title>osmos::feed</title>
    <updated>2021-06-15T00:29:27.157Z</updated>
    <generator>osmosfeed 1.10.2</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[Untitled]]></title>
        <id>https://nesslabs.com/from-note-taking-to-note-making?s=09</id>
        <link href="https://nesslabs.com/from-note-taking-to-note-making?s=09"/>
        <updated>2021-06-14T18:42:43.000Z</updated>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Tiny Projects]]></title>
        <id>https://tinyprojects.dev</id>
        <link href="https://tinyprojects.dev"/>
        <updated>2021-06-14T17:44:02.000Z</updated>
        <summary type="html"><![CDATA[A website about completing tiny programming projects.]]></summary>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Doubling my side hustle earnings - 2020/21 income report]]></title>
        <id>https://charlimarie.com/blog/2021-income?s=09</id>
        <link href="https://charlimarie.com/blog/2021-income?s=09"/>
        <updated>2021-06-14T16:11:42.000Z</updated>
        <summary type="html"><![CDATA[A full report on what I earned in the 2020/21 accounting year & the income streams that led to me doubling my side hustle revenue.]]></summary>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Elderflower cordial]]></title>
        <id>https://rivercottage.net/recipes/elderflower-cordial</id>
        <link href="https://rivercottage.net/recipes/elderflower-cordial"/>
        <updated>2021-06-14T12:21:04.000Z</updated>
        <summary type="html"><![CDATA[The sweetly scented, creamy-white flowers of the elder tree appear in abundance in hedgerows, scrub, woodlands and wasteland at the beginning of summer. The fresh flowers make a terrific aromatic cordial. They are best gathered just as the many tiny buds are beginning to open, and some are still closed. Gather on a warm, dry day (never when wet), checking the perfume is fresh and pleasing. Trees do differ and you will soon get to know the good ones. Remember to leave some flowers for elderberry picking later in the year.]]></summary>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Chat with Henry Zhu on OSS &amp;amp; Gift Economies]]></title>
        <id>https://maggieappleton.com/maintainers</id>
        <link href="https://maggieappleton.com/maintainers"/>
        <updated>2021-06-14T11:13:19.000Z</updated>
        <summary type="html"><![CDATA[Maggie is a designer, illustrator, and anthropologist. This is her digital garden for growing visual explanations about design, culture, and programming]]></summary>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Reasons why bugs might feel "impossible"]]></title>
        <id>https://jvns.ca/blog/2021/06/08/reasons-why-bugs-might-feel-impossible/</id>
        <link href="https://jvns.ca/blog/2021/06/08/reasons-why-bugs-might-feel-impossible/"/>
        <updated>2021-06-08T09:28:08.000Z</updated>
        <summary type="html"><![CDATA[Hello! I’m very slowly
working on writing a zine about debugging, so I asked on Twitter the other day:
If you’ve run into a bug where it felt “impossible” to understand what was happening – what made it feel that way?
Of course, bugs always happen for logical reasons, but I’ve definitely run into
bugs that felt like they might be impossible for me to understand (until I
figured them out!)
I got about 400 responses, which I’ll try to summarize here. I’m not going to
talk about how to deal with these various kinds of “impossible” bugs in this
post, I’ll just try to classify them.
Here are the categories I came up with for ways a bug might feel impossible
to understand. Each one of them has a bunch of sub variants which are bolded below.
it’s hard to reproduce
you don’t understand the overall…]]></summary>
        <author>
            <name>Julia Evans</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[You can now buy print version of my zines!]]></title>
        <id>https://jvns.ca/blog/2021/06/02/you-can-now-buy-print-version-of-my-zines-/</id>
        <link href="https://jvns.ca/blog/2021/06/02/you-can-now-buy-print-version-of-my-zines-/"/>
        <updated>2021-06-02T10:48:15.000Z</updated>
        <summary type="html"><![CDATA[Hello! Quick announcement: I opened a new print zine
store last week, so now you can buy print
copies of my zines! To start I’ve printed 350 copies of each of the “Bite
Size…” zines.
Here’s a photo of the front of the zines and some stickers:
and the back covers:



Here are some notes about how the store works:
great print quality!
I worked with a really good print company (Girlie Press) and printed the zines on some nice paper,
so they look WAY nicer than they do when printed on a home printer :). I’m
delighted with how they turned out.
When I originally started working on this project I thought about using a
print-on-demand company briefly (it sounds so convenient!) but I ordered test
prints from all the ones I could find and it turns out that none of them could
produce the print qualit…]]></summary>
        <author>
            <name>Julia Evans</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.10.2]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.10.2</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.10.2"/>
        <updated>2021-06-01T04:39:30.000Z</updated>
        <summary type="html"><![CDATA[Added: testing and CI/CD workflows]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Maggie Appleton - The Cultural Anthropology of React]]></title>
        <id>https://youtu.be/8snrXgzM1bM</id>
        <link href="https://youtu.be/8snrXgzM1bM"/>
        <updated>2021-05-30T20:43:14.000Z</updated>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Minimal CSS Solutions to (Previously) Complex Problems /w Stephanie Eckles [CSSCafe / english]]]></title>
        <id>https://m.youtube.com/watch?v=dz6aFfme_hg&amp;s=09</id>
        <link href="https://m.youtube.com/watch?v=dz6aFfme_hg&amp;s=09"/>
        <updated>2021-05-29T11:38:53.000Z</updated>
        <summary type="html"><![CDATA[If you love CSS, have a look at the CSS Café - Online Meetup: https://www.meetup.com/de-DE/CSS-Cafehttps://twitter.com/CSS__Cafe// For more CSS tricks and ti...]]></summary>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Watch Now - FREE MASTERCLASS]]></title>
        <id>https://ellenyin.com/replay</id>
        <link href="https://ellenyin.com/replay"/>
        <updated>2021-05-27T14:41:10.000Z</updated>
        <summary type="html"><![CDATA[How to attract consistent clients without a large audience]]></summary>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Next-paradigm programming languages: what will they look like and what chan]]></title>
        <id>https://dl.acm.org/doi/10.1145/3359591.3359739</id>
        <link href="https://dl.acm.org/doi/10.1145/3359591.3359739"/>
        <updated>2021-05-27T14:33:22.000Z</updated>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Local-first software: you own your data, in spite of the cloud | Proceeding]]></title>
        <id>https://dl.acm.org/doi/10.1145/3359591.3359737</id>
        <link href="https://dl.acm.org/doi/10.1145/3359591.3359737"/>
        <updated>2021-05-27T14:33:08.000Z</updated>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.9.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.9.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.9.0"/>
        <updated>2021-05-26T06:02:55.000Z</updated>
        <summary type="html"><![CDATA[Added: experimental support for iTunes podcast feed: Demo | Source. With this new release, you can render an audio control to play the mp3 file and display iTunes episode duration. It is "experimental" due to these caveats:

This feature is currently only available through custom template.
iTunes has no strict format requirement for duration. The unit is most likely seconds but can be "hh:mm:ss" or "mm:ss" for some sources. A future version may expose a human readable string to the template.
No image support yet. Some shows might have disabled CORS or use a relative URL for image, which forces osmosfeed to download the image during build. A future version may support it.
You can't republish the podcast in the feed output. Supporting this goes beyond the scope of the project at the moment.
Fixed: the articles in template data were not sorted.
Thank you @Zenigata]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS Tips]]></title>
        <id>https://markodenic.com/css-tips</id>
        <link href="https://markodenic.com/css-tips"/>
        <updated>2021-05-25T21:33:19.000Z</updated>
        <summary type="html"><![CDATA[CSS tips and tricks you will not see in most of tutorials.]]></summary>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Blog about what you've struggled with]]></title>
        <id>https://jvns.ca/blog/2021/05/24/blog-about-what-you-ve-struggled-with/</id>
        <link href="https://jvns.ca/blog/2021/05/24/blog-about-what-you-ve-struggled-with/"/>
        <updated>2021-05-24T13:59:07.000Z</updated>
        <summary type="html"><![CDATA[I was talking to Jemma recently about what stops people
from blogging. One barrier that stood out to me was: it’s hard to identify
which things you know will be useful to other people!
The process I use for a lot of my blog posts is:
Struggle with something (usually computer-related)
Eventually (days or months or years later), figure out how to solve some of
the problems I had
Write a blog post about what helped me
I think this approach is effective because if I struggled with something,
there’s a pretty good chance that other people are struggling with it too, and
what I learned is likely to be useful to at least some of them!
Obviously this isn’t the only approach to blogging, but it’s my approach, so
that’s what I’m going to write about here :). I’ll give a few examples of
specific blog…]]></summary>
        <author>
            <name>Julia Evans</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.8.1]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.1</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.1"/>
        <updated>2021-05-23T05:40:12.000Z</updated>
        <summary type="html"><![CDATA[Fixed: UnhandledPromiseRejectionWarning: Error: At least one option must be a string]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.8.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.0"/>
        <updated>2021-05-23T05:12:08.000Z</updated>
        <summary type="html"><![CDATA[Changed: Smart summary truncation. When there is no dedicated summary (only Atom feed has it, and many sites don't use it) from the source, we check if the content/description (Both Atom and RSS) field is long enough to be full text. If so, it will be truncated into a "pseudo" summary. If not, we assume the source used the content field as summary, and it will be displayed in full length.
Thank you: @LooperXX.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Learn CSS]]></title>
        <id>https://web.dev/learn/css</id>
        <link href="https://web.dev/learn/css"/>
        <updated>2021-05-21T15:36:58.000Z</updated>
        <summary type="html"><![CDATA[An evergreen CSS course and reference to level up your web styling expertise.]]></summary>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Demo: Standalone Bibliography]]></title>
        <id>https://citeproc-js.readthedocs.io/en/latest/deployments.html</id>
        <link href="https://citeproc-js.readthedocs.io/en/latest/deployments.html"/>
        <updated>2021-05-20T16:26:03.000Z</updated>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[sw-yx/spark-joy]]></title>
        <id>https://github.com/sw-yx/spark-joy</id>
        <link href="https://github.com/sw-yx/spark-joy"/>
        <updated>2021-05-20T14:23:47.000Z</updated>
        <summary type="html"><![CDATA[✨😂easy ways to add design flair, user delight, and whimsy to your product. - sw-yx/spark-joy]]></summary>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Wiki workflow]]></title>
        <id>https://wiki.nikitavoloboev.xyz/other/wiki-workflow#similar-wikis-i-liked</id>
        <link href="https://wiki.nikitavoloboev.xyz/other/wiki-workflow#similar-wikis-i-liked"/>
        <updated>2021-05-20T14:22:07.000Z</updated>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kris Howard - Knitted Disruption]]></title>
        <id>https://youtube.com/watch?v=0lqyYJl9vuM</id>
        <link href="https://youtube.com/watch?v=0lqyYJl9vuM"/>
        <updated>2021-05-20T12:01:25.000Z</updated>
        <summary type="html"><![CDATA[For those versed in both technology and craft, knitting patterns are just another form of programming language. An experienced knitter can reverse engineer m...]]></summary>
        <author>
            <name>My Reading List: Unread</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to look at the stack with gdb]]></title>
        <id>https://jvns.ca/blog/2021/05/17/how-to-look-at-the-stack-in-gdb/</id>
        <link href="https://jvns.ca/blog/2021/05/17/how-to-look-at-the-stack-in-gdb/"/>
        <updated>2021-05-17T09:14:37.000Z</updated>
        <summary type="html"><![CDATA[I was chatting with someone yesterday and they mentioned that they don’t really
understand exactly how the stack works or how to look at it.
So here’s a quick walkthrough of how you can use gdb to look at the stack of a C
program. I think this would be similar for a Rust program, but I’m going to use
C because I find it a little simpler for a toy example and also you can do Terrible
Things in C more easily.
our test program
Here’s a simple C program that declares a few variables and reads two strings
from standard input. One of the strings is on the heap, and one is on the
stack.
#include <stdio.h>
#include <stdlib.h>

int main() {
    char stack_string[10] = "stack";
    int x = 10;
    char *heap_string;

    heap_string = malloc(50);

    printf("Enter a string for the stack: ");
    ge…]]></summary>
        <author>
            <name>Julia Evans</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.7.2]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.2</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.2"/>
        <updated>2021-05-17T05:32:19.000Z</updated>
        <summary type="html"><![CDATA[⚠ Deprecated: To accommodate the monorepo setup, the node version in all templates/demos/examples has changed from 14 to 16. This is not a breaking change as our compile target is still node 14, and node 16 is backward compatible. We still recommend you start using node-version: "16" in your .github/workflows/update-feed.yaml today to get the performance/security improvements from the newer node. See example
Chore: Reorganize to monorepo with npm workspace.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
</feed>