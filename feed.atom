<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2021-05-24T14:52:55.700Z</id>
    <title>osmos::feed</title>
    <updated>2021-05-24T14:52:55.700Z</updated>
    <generator>osmosfeed 1.8.1</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[Wrangling Control Over PDFs with the Adobe PDF Embed API]]></title>
        <id>https://css-tricks.com/?p=340626</id>
        <link href="https://css-tricks.com/wrangling-control-over-pdfs-with-the-adobe-pdf-embed-api/"/>
        <updated>2021-05-24T13:57:21.000Z</updated>
        <summary type="html"><![CDATA[By our last estimate, there are now more PDFs in the world than atoms in the universe (not verified by outside sources) so chances are, from time to time, you’re going to run into a PDF document or two. Browsers …
The post Wrangling Control Over PDFs with the Adobe PDF Embed API appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Raymond Camden</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.8.1]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.1</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.1"/>
        <updated>2021-05-23T05:40:12.000Z</updated>
        <summary type="html"><![CDATA[Fixed: UnhandledPromiseRejectionWarning: Error: At least one option must be a string]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.8.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.0"/>
        <updated>2021-05-23T05:12:08.000Z</updated>
        <summary type="html"><![CDATA[Changed: Smart summary truncation. When there is no dedicated summary (only Atom feed has it, and many sites don't use it) from the source, we check if the content/description (Both Atom and RSS) field is long enough to be full text. If so, it will be truncated into a "pseudo" summary. If not, we assume the source used the content field as summary, and it will be displayed in full length.
Thank you: @LooperXX.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Should DevTools teach the CSS cascade?]]></title>
        <id>https://css-tricks.com/?p=340991</id>
        <link href="https://www.stefanjudis.com/blog/should-devtools-teach-the-css-cascade/"/>
        <updated>2021-05-21T23:22:54.000Z</updated>
        <summary type="html"><![CDATA[Stefan Judis, two days before I mouthed off about using (X, X, X, X) for talking about specificity, has a great blog post not only using that format, but advocating that browser DevTools should show us that value by …
The post Should DevTools teach the CSS cascade? appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Svelte for the Experienced React Dev]]></title>
        <id>https://css-tricks.com/?p=340825</id>
        <link href="https://css-tricks.com/svelte-for-the-experienced-react-dev/"/>
        <updated>2021-05-21T14:30:59.000Z</updated>
        <summary type="html"><![CDATA[This post is an accelerated introduction to Svelte from the point of view of someone with solid experience with React. I’ll provide a quick introduction, and then shift focus to things like state management and DOM interoperability, among other things. …
The post Svelte for the Experienced React Dev appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Adam Rackis</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS Hell]]></title>
        <id>https://css-tricks.com/?p=340919</id>
        <link href="https://csshell.dev/"/>
        <updated>2021-05-21T14:29:16.000Z</updated>
        <summary type="html"><![CDATA[Collection of common CSS mistakes, and how to fix them
From Stefánia Péter. 
Clever idea for a site! Some of them are little mind-twisters that could bite you, and some of them are honing in on best practices that …
The post CSS Hell appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[JSON in CSS]]></title>
        <id>https://css-tricks.com/?p=340599</id>
        <link href="https://css-tricks.com/json-in-css/"/>
        <updated>2021-05-20T22:29:53.000Z</updated>
        <summary type="html"><![CDATA[Jonathan Neal tweeted a heck of a little CSS trick the other day, putting JSON inside CSS and plucking it out with JavaScript. Valid values for custom properties are quite liberal! So this looks for a CSS rule (e.g. a …
The post JSON in CSS appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Learn CSS!]]></title>
        <id>https://css-tricks.com/?p=340933</id>
        <link href="https://web.dev/learn/css/"/>
        <updated>2021-05-20T21:51:43.000Z</updated>
        <summary type="html"><![CDATA[Ooo look at this mighty SEO flex from Google: Learn CSS! Well deserved — this is great content. Twenty-three chapters taking you through all the fundamentals of CSS with extra content, like relevant podcasts, interactive examples, and even quizzes to …
The post Learn CSS! appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Can We Create a “Resize Hack” With Container Queries?]]></title>
        <id>https://css-tricks.com/?p=340715</id>
        <link href="https://css-tricks.com/can-we-create-a-resize-hack-with-container-queries/"/>
        <updated>2021-05-20T14:24:12.000Z</updated>
        <summary type="html"><![CDATA[If you follow new developments in CSS, you’ve likely heard of the impending arrival of container queries. We’re going to look at the basics here, but if you’d like another look, check out Una’s “Next Gen CSS: @container” article. …
The post Can We Create a “Resize Hack” With Container Queries? appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Jhey Tompkins</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[fit-content and fit-content()]]></title>
        <id>https://css-tricks.com/?p=340897</id>
        <link href="https://www.quirksmode.org/blog/archives/2021/04/fitcontent_and.html"/>
        <updated>2021-05-20T14:20:56.000Z</updated>
        <summary type="html"><![CDATA[Here’s some hardcore deep-dive CSS nerdery from PPK. If you can wrap your mind around min-content (the smallest an element can be based on the content it contains) and max-content (the largest the content of an element can push it) …
The post fit-content and fit-content() appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Notion API]]></title>
        <id>https://css-tricks.com/?p=340731</id>
        <link href="https://css-tricks.com/notion-api/"/>
        <updated>2021-05-19T23:18:42.000Z</updated>
        <summary type="html"><![CDATA[The Public Beta of the Notion API dropped! Woot! Here’s their guide. I’ve been a Notion user and fan for a long time, for both personal and professional team use. They even sponsored a few videos around here a …
The post Notion API appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[svg-loader: A Different Way to Work With External SVG]]></title>
        <id>https://css-tricks.com/?p=340692</id>
        <link href="https://css-tricks.com/svg-loader-a-different-way-to-work-with-external-svg/"/>
        <updated>2021-05-19T14:28:19.000Z</updated>
        <summary type="html"><![CDATA[SVGs are awesome: they are small, look sharp on any scale, and can be customized without creating a separate file. However, there is something I feel is missing in web standards today: a way to include them as an external …
The post svg-loader: A Different Way to Work With External SVG appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Shubham Jain</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pinned Audio WordPress Theme]]></title>
        <id>https://css-tricks.com/?p=340613</id>
        <link href="https://css-tricks.com/pinned-audio-wordpress-theme/"/>
        <updated>2021-05-18T19:14:53.000Z</updated>
        <summary type="html"><![CDATA[I’m afraid I have to start this with a whole backstory, as the journey here is the point, not so much the theme.
A fella wrote to me a while back outlining a situation he was in. His company has …
The post Pinned Audio WordPress Theme appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Create Neon Text With CSS]]></title>
        <id>https://css-tricks.com/?p=340420</id>
        <link href="https://css-tricks.com/how-to-create-neon-text-with-css/"/>
        <updated>2021-05-18T14:31:25.000Z</updated>
        <summary type="html"><![CDATA[Neon text can add a nice, futuristic touch to any website. I’ve always loved the magic of neon signs, and wanted to recreate them using CSS. I thought I’d share some tips on how to do it! In this article, …
The post How to Create Neon Text With CSS appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Silvia O'Dwyer</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Humble `img` Element And Core Web Vitals]]></title>
        <id>https://css-tricks.com/?p=340716</id>
        <link href="https://www.smashingmagazine.com/2021/04/humble-img-element-core-web-vitals/"/>
        <updated>2021-05-17T22:38:06.000Z</updated>
        <summary type="html"><![CDATA[Addy Osmani on images in HTML:
The humble <img> element has gained some superpowers over the years. Given how central it is to image optimization on the web, let’s catch up on what it can do and how it can 
…
The post The Humble `img` Element And Core Web Vitals appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Love Letter to HTML & CSS]]></title>
        <id>https://css-tricks.com/?p=339522</id>
        <link href="https://css-tricks.com/a-love-letter-to-html-css/"/>
        <updated>2021-05-17T14:27:22.000Z</updated>
        <summary type="html"><![CDATA[I see you. In the back there, behind JavaScript and React and PHP and all those “real” programming languages, I see you. And I appreciate you.
The post A Love Letter to HTML & CSS appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Ashley Kolodziej</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Euismod]]></title>
        <id>https://css-tricks.com/?p=340594</id>
        <link href="https://www.euismod.dev/"/>
        <updated>2021-05-17T14:27:13.000Z</updated>
        <summary type="html"><![CDATA[An interactive tool for learning grid syntax from Etesam Ansari. In the Learn section, it teaches you some concepts (involving multiple bits of the grid syntax) then gives you a task to complete by filling out the right syntax. I’m …
The post Euismod appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to look at the stack with gdb]]></title>
        <id>https://jvns.ca/blog/2021/05/17/how-to-look-at-the-stack-in-gdb/</id>
        <link href="https://jvns.ca/blog/2021/05/17/how-to-look-at-the-stack-in-gdb/"/>
        <updated>2021-05-17T09:14:37.000Z</updated>
        <summary type="html"><![CDATA[I was chatting with someone yesterday and they mentioned that they don’t really
understand exactly how the stack works or how to look at it.
So here’s a quick walkthrough of how you can use gdb to look at the stack of a C
program. I think this would be similar for a Rust program, but I’m going to use
C because I find it a little simpler for a toy example and also you can do Terrible
Things in C more easily.
our test program
Here’s a simple C program that declares a few variables and reads two strings
from standard input. One of the strings is on the heap, and one is on the
stack.
#include <stdio.h>
#include <stdlib.h>

int main() {
    char stack_string[10] = "stack";
    int x = 10;
    char *heap_string;

    heap_string = malloc(50);

    printf("Enter a string for the stack: ");
    ge…]]></summary>
        <author>
            <name>Julia Evans</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.7.2]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.2</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.2"/>
        <updated>2021-05-17T05:32:19.000Z</updated>
        <summary type="html"><![CDATA[⚠ Deprecated: To accommodate the monorepo setup, the node version in all templates/demos/examples has changed from 14 to 16. This is not a breaking change as our compile target is still node 14, and node 16 is backward compatible. We still recommend you start using node-version: "16" in your .github/workflows/update-feed.yaml today to get the performance/security improvements from the newer node. See example
Chore: Reorganize to monorepo with npm workspace.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.7.1]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.1</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.1"/>
        <updated>2021-05-16T02:33:58.000Z</updated>
        <summary type="html"><![CDATA[Fixed: static files were unnecessarily copied for custom templates.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.7.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.0"/>
        <updated>2021-05-16T01:42:24.000Z</updated>
        <summary type="html"><![CDATA[Added: templating system. Demo | Source | Docs
Chore: rendering logic refactoring. Adopting functional paradigm.
Thank you @tianheg, @onnyyonn]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The OSI model doesn't map well to TCP/IP]]></title>
        <id>https://jvns.ca/blog/2021/05/11/what-s-the-osi-model-/</id>
        <link href="https://jvns.ca/blog/2021/05/11/what-s-the-osi-model-/"/>
        <updated>2021-05-11T14:58:41.000Z</updated>
        <summary type="html"><![CDATA[TCP/IP is the set of networking protocols that we use on the modern internet –
TCP, UDP, IP, ARP, ICMP, DNS, etc. When I talk about “networking”, I’m
basically always talking about TCP/IP.
Many explanations of TCP/IP start with something called the “OSI model”. I
don’t use the OSI model when explaining networking because when I first
started learning about internet networking I found all of the OSI model
explanations really confusing – it wasn’t clear to me at all how the OSI
model corresponded to TCP/IP.
So if you’re just starting to learn about networking and you’re confused about
the OSI model, here’s an explanation of how it corresponds to TCP/IP, how
it doesn’t, and why it’s safe to mostly just ignore it if you don’t find it helpful.
the OSI model has 7 layers
Let’s very briefly discu…]]></summary>
        <author>
            <name>Julia Evans</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.4.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.4.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.4.0"/>
        <updated>2021-05-10T08:55:42.000Z</updated>
        <summary type="html"><![CDATA[Added: Basic theme customization: Demo | Source | Docs.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.6.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.6.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.6.0"/>
        <updated>2021-05-10T08:15:20.000Z</updated>
        <summary type="html"><![CDATA[Added: Link from the title of a subscription to its website.
Added: Store feedUrl and siteUrl for each source in cache.
Added: Semantic element (<time>) for timestamp on the UI.
Added: Semantic API for theming the default template. Demo | Source | Docs
Changed: Moved feed metadata from article level to feed level in cache.
Fixed: Any html-like text was stripped from title. Fixed with encoded text.
Removed: href for each source in cache. The value was never used so it's not a breaking change.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.5.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.5.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.5.0"/>
        <updated>2021-05-08T05:16:47.000Z</updated>
        <summary type="html"><![CDATA[Added: Atom feed generator
Added: Customizable site title
Added: Copy all files from static directory to the root of the site.
Changed: Favicon, css, and js assets now existing at site root level.
Chore: Excluded testing files from repo.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.3.1]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.3.1</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.3.1"/>
        <updated>2021-05-05T05:19:57.000Z</updated>
        <summary type="html"><![CDATA[Fixed: Avoid crwalers.
Fixed: Error logging from XML parser.
Fixed: Typo in docs.
Thank you: @dym-sh, @tabokie, @cheese1]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.3.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.3.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.3.0"/>
        <updated>2021-05-05T05:19:26.000Z</updated>
        <summary type="html"><![CDATA[Added: Customize cache lifespan with cacheMaxDays property in osmosfeed.yaml.
Added: Documentation for osmosfeed.yaml.
Fixed: More intuitive logging during build.
Chore: Refactored parameter passing for enrich step.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[I put all of my comics online!]]></title>
        <id>https://jvns.ca/blog/2021/05/02/publishing-comics/</id>
        <link href="https://jvns.ca/blog/2021/05/02/publishing-comics/"/>
        <updated>2021-05-02T11:41:59.000Z</updated>
        <summary type="html"><![CDATA[Hello! As you probably know, I write a lot of comics about programming, and I publish collections of them as zines you can buy at https://wizardzines.com.
I also usually post the comics on Twitter as I write them. But there are a lot of problems with just posting them to Twitter, like:
the pages are hard to find. For example, if you want to find the one on
socat, you can search twitter
and you’ll find it, but then you have to somehow magically guess what words I
used in the tweet, and also sort through a bunch of other tweets.
they’re annoying to link to. Twitter isn’t really the best user interface for this sort of thing.
I can’t make updates. Twitter doesn’t have an edit button!
work that never made it into a zine is basically impossible to find. For example I
wrote 12 pages of a sequel …]]></summary>
        <author>
            <name>Julia Evans</name>
        </author>
    </entry>
</feed>